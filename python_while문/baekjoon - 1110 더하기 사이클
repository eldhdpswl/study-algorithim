## ex) 68
n = int(input())
num = n
cnt = 0

while True:
    a = num // 10 ## 10의 자리 구하기 ex) 6
    b = num % 10  ## 1의 자리 구하기 ex) 8
    c = (a+b) % 10 ## 10의 자리 1의 자리 더한 값을 10으로 나누어 일의 자리 구하기
    num = (b * 10) + c

    cnt = cnt +1
    if (num == n):
        break
print(cnt)

"""
##

+ 덧셈

- 뺄셈

* 곱하기

** 제곱

/ 나누기

// 나누기 연산 후 소수점 이하의 수를 버리고, 정수 부분의 몫을 구함

% 나누기 연산 후 몫이 아닌 나머지를 구함

++ 증감 연산자 (전치; 먼저 변수의 값을 증감시킨 후 연산에 사용)

-- 감소 연산자 (후치; 먼저 변수를 연산에 사용한 후 값을 증감시킴)


(2) str 방식은 

n = input()    # n = "26"
num = n
cnt = 0

while 1:
   if len(num) == 1:
      num = "0" + num
   plus = str(int(num[0]) + int(num[1]))  # 2 + 6 = "8"
   num = num[-1] + plus[-1]               # "6" + "8" = "68"
   cnt += 1
   if num == n:
      print(cnt)
      break

##
처음 변수설정은 정수(int)풀이와 동일하고 여기서는 while True: 와는 다르게 while 1: 을 설정했습니다.
다음으로 len(num), 즉 입력된 str(문자열)의 길이를 물어보는 건데요.

​여기서 26이 입력됐다고 가정을 했으니까, len(num)는 2가 되겠네요.
그리고 문제에서 "먼저 주어진 수가 10보다 작다면 앞에 0을 붙여 두 자리 수로 만들고"라는 조건을 줬으니
그에 맞게, len(num) 길이가 1이 될 때, 한 자리 수일 때 num 앞에 "0"을 추가해줍니다.

​다음은 int(정수)풀이랑 비슷한데요.
먼저 파이썬은 input()으로 어떤 것을 받든지 다 str(문자열)로 입력된 후 list [ ]로 저장이 되요👏
이 특징을 이용해서 입력된 26은 num = [2, 6]이렇게 저장된 상태니
int(num[0]) 2와 int(num[1]) 6을 정수(int)로써 먼저 더해줘서 8을 만들고 이것을 다시 str(문자열)로 저장해요.

​그리고 num = [2, 6] 이었던 것을
num[-1], 맨 마지막 문자열인 "6"을 불러오고
plus[-1], 이 경우에는 plus = [8] 밖에 없으니 무조건 "8"이 불려오게되어서
두 문자열을 더하면 "68"이 되고, cnt를 1나 더해줍니다.

마지막 코드는 정수(int)풀이와 마찬가지로
설정한 변수 num와 처음 입력받은 n(26)이 같아지면, cnt를 print하고 break 멈춥니다!
"""
